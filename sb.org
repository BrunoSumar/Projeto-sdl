*  

#+name: e-script begin
#+begin_src elisp
  (code-c-d "sdl" "/home/tetro/clones/Projeto-sdl/")
  (code-c-d "sdl" "/home/bruno/Documentos/uff/9 periodo/jogos digitais/Projeto-sdl/")

  (find-sdlfile "main.cpp")
  (find-sdlfile "main.cpp" "setupScene")
#+end_src

*                                        macedo
Eu esqueci oque eu estava fazendo da última vez... 


(find-sdlfile "mapa.h")
(find-sdlfile "mapa.h" "Mapa::addUnidade")
(find-sdlfile "mapa.h" "Mapa::tiroPersonagem")

(find-sdlfile "main.cpp")
(find-sdlfile "main.cpp" "setupScene")
(find-sdlfile "main.cpp" "void eventHandler")

(find-sdlfile "unidade.h")
(find-sdlfile "unidade.h" "struct Unidade")
(find-sdlfile "unidade.h" "struct Personagem : Unidade")

#+name: main.cpp
#+begin_src c++
  void setupScene(){
    scene.setProjection(
      scale(1., 1., -1.)*perspective(
	45.0f,                                    // fov
	(float)SCREEN_WIDTH/(float)SCREEN_HEIGHT, // aspect ratio
	0.1f,                                     // near
	100.f                                     // far
      ));

    scene.setView(
      lookAt(
	{5.5f, 2.f, 0.f},  // eye
	{-2.f, .0f, 0.f},  // center
	{0.f, 1.f, 0.f}    // up
      ));

    cartaoSP = new ShaderProgram{
      Shader{"shaders/cartao.vert", GL_VERTEX_SHADER},
      Shader{ "shaders/cartao.frag", GL_FRAGMENT_SHADER}
    };

    fundoSP = new ShaderProgram{
      Shader{"shaders/fundo.vert", GL_VERTEX_SHADER},
      Shader{ "shaders/fundo.frag", GL_FRAGMENT_SHADER}
    };

    cenarioSP = new ShaderProgram {
      Shader{"shaders/vertex_shader", GL_VERTEX_SHADER},
      Shader{"shaders/fragment_shader", GL_FRAGMENT_SHADER}
    };

    pisoSP = new ShaderProgram{
      Shader{"shaders/piso.vert", GL_VERTEX_SHADER},
      Shader{ "shaders/piso.frag", GL_FRAGMENT_SHADER}
    };

    scene.addFundo("resources/folha.png", fundoSP);

    scene.addFigura("resources/cenario4.obj", "resources/cenario4.png");
    scene.figuras.back()->program = cenarioSP;
    scene.figuras.back()->model = scale(2., 2., 2.);

    scene.mapa.initPersonagem(cartaoSP);
    scene.mapa.initPiso(pisoSP);

    Inimigo *i = new Inimigo(cartaoSP, 1, 1);
    scene.mapa.addUnidade(i);
  }
#+end_src


#+name: unidade.h
#+begin_src c++ 
  struct Inimigo : Unidade {
    int hp;

    //float cooldown = 0.1f;

    // Para implementar cooldown
    // float last_shot = 0.;

    Inimigo(ShaderProgram* sp, int posx=0, int posy=0)
      : Unidade("resources/cubomal.png")
    {
      cartao.program = sp;
    };

    //Unidade* fire(float t);
  };
#+end_src


** escript doido lá
#+name: find-angg-links
#+begin_src elisp
(find-angg-es-links)

(find-es "telegram" "tdlib")

;; The `progn' below defines versions of `find-angg' and
;; `find-es' that use `find-wget' to access the
;; public copies of my files at angg.twu.net:
;;
(progn
  (defun find-angg (fname &rest rest)
    (apply 'find-wgeta (format "http://angg.twu.net/%s" fname) rest))
  (defun find-es (fname &rest rest)
    (apply 'find-wgeta (format "http://angg.twu.net/e/%s.e" fname) rest))
)
#+end_src
